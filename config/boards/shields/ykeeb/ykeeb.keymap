#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUN     3
#define MEDIA   4
#define MOUSE   5
#define NUM     6

&mmv {
    time-to-max-speed-ms = <100>;
};

&mmv {
    acceleration-exponent=<1>;
};

&mwh {
    time-to-max-speed-ms = <300>;
};


&mwh {
    acceleration-exponent=<2>;
};


/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

                        bindings = <
    &kp Q        &kp W        &kp F       &kp P         &kp B                                             &kp J         &kp L        &kp U  &kp Y       &kp SEMI
    &hm LGUI A   &hm LALT R   &hm LCTL S  &hs LSHIFT T  &kp G                                             &kp M         &hs RSHIFT N &hm RCTL E    &hm RALT I  &hm RGUI O
    &kp Z        &kp X        &kp C       &kp D         &kp V                                             &kp K         &kp H        &kp COMMA     &kp DOT     &kp SLASH
                                          &kp DEL       &lt NAV RET  &lt FUNC TAB       &lt MEDIA BSPC    &lt SYM SPACE &kp SQT
                                          &lt MEDIA ESC &lt NAV BSPC  &lt MOUSE DEL     &lt SYM RET       &lt NUM SPACE &lt FUN TAB
         >;
	
        };

        nav_layer {
            label = "Navigation";

            bindings = <
    &none      &none    &none     &none    &none                                      &kp ASTRK     &kp N7       &kp N8        &kp N9      &kp MINUS
    &none      &none    &none     &none    &none                                     &kp FSLH      &kp N4       &kp N5        &kp N6      &kp PLUS
    &none      &none    &none     &none    &none                                     &kp EQUAL     &kp N1       &kp N2        &kp N3      &kp N0
                                  &none    &none     &none              &kp RET         &kp SPACE     &kp DOT
            >;
        };

        sym_layer {
            label = "Symbols";

            bindings = <
    &kp EXCL     &kp AT       &kp HASH        &kp DLLR         &kp PRCNT                                   &kp CARET     &kp AMPS          &kp ASTRK     &kp UNDER   &kp EQUAL
    &kp MINUS    &kp LBKT     &kp LBRC        &kp LPAR         &kp LT                                      &kp GT        &kp RPAR          &kp RBRC      &kp RBKT    &kp PLUS
    &kp CAPS     &kp GRAVE    &kp LC(LS(TAB)) &kp LC(LG(LEFT)) &caps_word                                  &trans        &kp LC(LG(RIGHT)) &kp LC(TAB)   &trans      &kp BSLH
                                              &trans           &kp RET       &kp DEL        &kp BSPC       &trans        &trans
            >;
        };

        fun_layer {
            label = "Function";

            bindings = <
    &bootloader  &kp LS(PG_UP) &kp LS(UP)   &kp LS(PG_DN) &trans                                         &kp C_MUTE       &kp F7       &kp F8        &kp F9      &kp F10
    &kp LS(HOME) &kp LS(LEFT)  &kp LS(DOWN) &kp LS(RIGHT) &kp LS(END)                                    &kp K_VOL_UP     &kp F4       &kp F5        &kp F6      &kp F11
    &bt BT_SEL 3 &bt BT_SEL 2  &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR                                     &kp K_VOL_DN     &kp F1       &kp F2        &kp F3      &kp F12
                                            &out OUT_USB  &out OUT_BLE     &trans      &kp C_PLAY_PAUSE  &trans           &kp SPACE
            >;
        };

        media_layer {
            label = "Media";

            bindings = <
    &trans       &trans       &trans        &trans            &trans                                      &none             &none       &none         &none         &none
    &trans       &trans       &trans        &trans            &trans                                      &none             &none            &none             &none       &none
    &trans       &trans       &trans        &trans            &trans                                      &none        &none     &none       &none   &none
                                            &trans            &trans        &trans         &none         &none       &none
            >;
        };

        mouse_layer {
            label = "Mouse";

            bindings = <
    &bootloader &trans      &trans      &trans      &trans                                           &trans      &trans      &trans      &trans      &trans
    &trans      &trans      &trans      &trans      &trans                                           &trans      &trans      &trans      &trans      &trans
    &trans      &trans      &trans      &trans      &trans                                           &trans      &trans      &trans      &trans      &trans
                                        &trans      &trans          &trans           &trans          &trans      &trans
            >;
        };

        winnav_layer {
            label = "Win Navigation";

            bindings = <
    &trans       &trans       &kp LG(UP)   &trans        &trans                                      &trans      &trans      &trans      &trans      &trans
    &trans       &kp LG(LEFT) &kp LG(DOWN) &kp LG(RIGHT) &trans                                      &trans      &trans      &trans      &trans      &trans
    &trans       &trans       &trans       &trans        &trans                                      &trans      &trans      &trans      &trans      &trans
                                           &trans        &trans        &trans         &trans         &trans      &trans
            >;
        };
    };
};